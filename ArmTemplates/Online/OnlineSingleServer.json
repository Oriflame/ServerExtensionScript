{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingVNETName": { "type": "string",
        "metadata": { "description": "Existing VNET that contains the domain controller" }
    },
    "existingVnetRG": { "type": "string",
        "metadata": { "description": "Existing VNET ResourceGroup" }
    },
    "existingSubnetName": { "type": "string",
        "metadata": { "description": "Existing subnet that contains the domain controller" }
    },



    // values stored as tag of server
    "vmTags" : { "type": "object", "defaultValue": "json('null')",
      "metadata": { "description": "dicitonary of new server Tags" } 
    },

    // "tagServerEnv": { "type": "string",
    //   "metadata": { "description": "value of ServerEnv tag" }
    // },
    // "tagServerRegion": { "type": "string",
    //   "metadata": { "description": "value of ServerRegion tag" }
    // },    
    // "tagOctopusEnv": { "type": "string",
    //   "metadata": { "description": "value of OctopusEnv tag" }
    // },
    // "tagServerRole": { "type": "string",
    //   "metadata": { "description": "value of ServerRole tag" }
    // },
    // "tagOctopusRole": { "type": "string",
    //   "metadata": { "description": "value of OctopusRole tag" }
    // },

    // VM parameterization
    "vmName": { "type": "string",
        "metadata": { "description": "Name of the VM" }
    },
    "vmSize": { "type": "string",
        "defaultValue": "Standard_A2",
        "metadata": { "description": "The size of the virtual machines" }
    },
    "vmOSStorageType": { "type": "string", 
        "defaultValue": "Standard_LRS",      
        "metadata": { "description": "The type of storage for virtual machines. Can be Standard_LRS or Premium_LRS. Needs to correlate with vmSize" }
    },
    "vmOSVersion": {  "type": "string", 
        "defaultValue": "2016-Datacenter-Server-Core",
        "metadata": { "description": "The type of OS for virtual machines." }
    },
    "vmAdminUsername": { "type": "string",
        "metadata": { "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator" }
    },
    "vmAdminPassword": { "type": "securestring",
        "metadata": { "description": "The password for the administrator account of the new VM and the domain" }
    },
    "vmAvailabilitySetName": { "type": "string", "defaultValue": "*",
        "metadata": { "description": "Name of Availability Set - none if empty" }
    },
    

    // domain parameterization
    "domainJoin": { "type": "string", "allowedValues": ["Yes", "No"], "defaultValue": "Yes" },
    "domainJoinAccount": { "type": "string",
        "metadata": { "description": "The account of the user with permissions to add" }
    },
    "domainJoinToDomain": { "type": "string",
        "metadata": { "description": "The FQDN of the AD domain" }
    },
    "domainJoinPassword": { "type": "securestring",
        "metadata": { "description": "Password of the account on the domain" }
    },
    "domainJoinOuPath": { "type": "string",
        "defaultValue": "",
        "metadata": { "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com" }
    },
    "domainJoinOptions": { "type": "int",
        "defaultValue": 3,
        "metadata": { "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx" }
    },
    
    "managedidentity" : { "type": "string", "allowedValues": ["Yes", "No"], "defaultValue": "Yes" },
    
    "aadSetupTemplate": { "type": "string",
      "defaultvalue": "https://raw.githubusercontent.com/Oriflame/ServerExtensionScript/master/ArmTemplates/Online/OnlineSetup.json"
    },
    "aadGroupScript" : { "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Oriflame/ServerExtensionScript/master/Scripts/add-aadGroup.ps1",
      "metadata": { "description": "Uri of custom script extension file." }  
    },
    "aadGroupExec": { "type": "securestring",
        "defaultValue": "",
        "metadata": { "description": "add group execution" }
    },

    "DiagnosticsStorageAccountName": { "type": "string",
        "metadata": { "description": "Storage account name used for monitoring" }
    }
  },

  "variables": {
    "storageAccountName": "[parameters('DiagnosticsStorageAccountName')]",
    "diagnosticsStorageAccountId": "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "diagnosticsExtensionName": "IaaSDiagnostics",
    "nicName": "[concat(parameters('vmName'),'Nic')]",
    "vnetID": "[resourceId(parameters('existingVnetRG'), 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
  
    "vmIdentity" : { "type": "systemAssigned" },
    "availabilitySetName": "[if( equals(parameters('vmAvailabilitySetName'), '*'), 'none', parameters('vmAvailabilitySetName'))]",        
    "availabilitySet": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "tags" : {
          "VM" : "[parameters('vmName')]"  
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type":       "Microsoft.Compute/virtualMachines",
      "identity":   "[if( equals(parameters('managedidentity'), 'Yes'), variables('vmIdentity'), json('null'))]",
      "name":       "[parameters('vmName')]",
      "location":   "[resourceGroup().location]",
      "tags" :      "[parameters('vmTags')]",
      "properties": {
        "availabilitySet": "[if( equals(parameters('vmAvailabilitySetName'), '*'), json('null'), variables('availabilitySet'))]",        
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('vmOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": { "storageAccountType": "[parameters('vmOSStorageType')]" }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ]
    },
    {
      "name": "[concat(parameters('vmName'),'/', variables('diagnosticsExtensionName'))]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Diagnostics",
        "type": "IaaSDiagnostics",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "StorageAccount": "[variables('storageAccountName')]",
          "WadCfg": {
            "DiagnosticMonitorConfiguration": {
              "overallQuotaInMB": 5120,
              "Metrics": {
                "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                "MetricAggregation": [
                  {
                    "scheduledTransferPeriod": "PT1H"
                  },
                  {
                    "scheduledTransferPeriod": "PT1M"
                  }
                ]
              },
              "DiagnosticInfrastructureLogs": {
                "scheduledTransferLogLevelFilter": "Error"
              },
              "PerformanceCounters": {
                "scheduledTransferPeriod": "PT1M",
                "PerformanceCounterConfiguration": [
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Thread Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Handle Count",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\System Up Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Context Switches/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\System\\Processor Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Available Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Committed Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Cache Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Pages/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Memory\\Page Faults/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
                    "sampleRate": "PT1M"
                  },
                  {
                    "counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
                    "sampleRate": "PT1M"
                  }
                ]
              },
              "WindowsEventLog": {
                "scheduledTransferPeriod": "PT1M",
                "DataSource": [
                  {
                    "name": "Application!*[Application[(Level = 1 or Level = 2 or Level = 3)]]"
                  },
                  {
                    "name": "Security!*[System[band(Keywords,4503599627370496)]]"
                  },
                  {
                    "name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
                  }
                ]
              }
            }
          }
        },
        "protectedSettings": {
          "storageAccountName": "[variables('storageAccountName')]",
          "storageAccountKey": "[listKeys(variables('diagnosticsStorageAccountId'),'2015-06-15').key1]",
          "storageAccountEndPoint": "https://core.windows.net/"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/joindomain')]",
      "condition": "[equals(parameters('domainJoin'), 'Yes')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name":    "[parameters('domainJoinToDomain')]",
          "OUPath":  "[parameters('domainJoinOuPath')]",
          "User":    "[parameters('domainJoinAccount')]",
          "Options": "[parameters('domainJoinOptions')]",
          "Restart": true
        },
        "protectedSettings": {
          "Password": "[parameters('domainJoinPassword')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
        "[concat(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')),'/extensions/', variables('diagnosticsExtensionName'))]"
      ]
    },
    

    {
      "apiVersion": "2015-01-01",
      "name": "[concat(deployment().name, '-AAD)')]",
      "type": "Microsoft.Resources/deployments",
      "condition": "[equals(parameters('managedidentity'), 'Yes')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('aadSetupTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName":             { "value": "[parameters('vmName')]" },
          // add-aadGroup - execution must be aligned with the scripting
          "aadGroupScript":     { "value": "[parameters('aadGroupScript')]" },
          "aadGroupExec":       { "value": "[parameters('aadGroupExec')]" }   
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
        "[concat(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')),'/extensions/joindomain')]"
      ]
    }
  ],
  "outputs": {
    "VMName": {
      "type" : "string",
	    "value": "[parameters('vmName')]"
    },
    "PrivateIPAddress" : {
      "type" : "string",
      "value": "[reference(variables('nicName')).ipConfigurations[0].properties.privateIPAddress]"
    }
  }
}